package com.springboot.mathwebapp.generatedviews;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Immutable;

import com.springboot.mathwebapp.generatedentities.User;
import com.springboot.mathwebapp.generatedentities.UserHomeworkId;
import com.springboot.mathwebapp.generatedentities.UserUploadfiles;

/**
 * UserHomework generated by hbm2java
 */
@Entity
@Table(name = "user_homework", catalog = "mathapplicationschema")
@Immutable
public class UserHomeworkView implements java.io.Serializable {

	private UserHomeworkIdView id;
	private UserView user;
	private String name;
	private Date deadline;
	private Integer forUserid;
	private Set<UserUploadFilesView> userUploadfileses = new HashSet<UserUploadFilesView>(0);

	public UserHomeworkView() {
	}

	public UserHomeworkView(UserHomeworkIdView id, UserView user) {
		this.id = id;
		this.user = user;
	}

	public UserHomeworkView(UserHomeworkIdView id, UserView user, String name, Date deadline, Integer forUserid,
			Set<UserUploadFilesView> userUploadfileses) {
		this.id = id;
		this.user = user;
		this.name = name;
		this.deadline = deadline;
		this.forUserid = forUserid;
		this.userUploadfileses = userUploadfileses;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "homeworkid", column = @Column(name = "homeworkid", nullable = false)),
			@AttributeOverride(name = "userid", column = @Column(name = "userid", nullable = false)) })
	public UserHomeworkIdView getId() {
		return this.id;
	}

	public void setId(UserHomeworkIdView id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid", nullable = false, insertable = false, updatable = false)
	public UserView getUser() {
		return this.user;
	}

	public void setUser(UserView user) {
		this.user = user;
	}

	@Column(name = "name", length = 1024)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deadline", length = 10)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "for_userid")
	public Integer getForUserid() {
		return this.forUserid;
	}

	public void setForUserid(Integer forUserid) {
		this.forUserid = forUserid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userHomework")
	public Set<UserUploadFilesView> getUserUploadfileses() {
		return this.userUploadfileses;
	}

	public void setUserUploadfileses(Set<UserUploadFilesView> userUploadfileses) {
		this.userUploadfileses = userUploadfileses;
	}

}
